-- 1. Secuencia para REGION
CREATE SEQUENCE SEQ_REGION START WITH 21 INCREMENT BY 1;

-- 2. Tablas catálogo básicas
CREATE TABLE REGION (
    ID_REGION NUMBER PRIMARY KEY,
    NOMBRE_REGION VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE TURNO (
    ID_TURNO NUMBER PRIMARY KEY,
    NOMBRE_TURNO VARCHAR2(50) NOT NULL UNIQUE,
    HORA_INICIO CHAR(5) NOT NULL,
    HORA_FIN CHAR(5) NOT NULL
);

CREATE TABLE AFP (
    ID_AFP NUMBER PRIMARY KEY,
    NOMBRE_AFP VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE SISTEMA_SALUD (
    ID_SISTEMA_SALUD NUMBER PRIMARY KEY,
    NOMBRE_SISTEMA VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE TIPO_MAQUINA (
    ID_TIPO_MAQUINA NUMBER PRIMARY KEY,
    NOMBRE_TIPO VARCHAR2(100) NOT NULL UNIQUE
);


-- 3. Tablas con dependencias simples
-- COMUNA depende de REGION
CREATE TABLE COMUNA (
    ID_COMUNA NUMBER PRIMARY KEY,
    NOMBRE_COMUNA VARCHAR2(100) NOT NULL,
    REGION_ID NUMBER NOT NULL,
    CONSTRAINT FK_COMUNA_REGION FOREIGN KEY (REGION_ID) REFERENCES REGION(ID_REGION)
);

-- 4. Tablas con más dependencias
-- PLANTA depende de COMUNA
CREATE TABLE PLANTA (
    ID_PLANTA NUMBER PRIMARY KEY,
    NOMBRE_PLANTA VARCHAR2(100) NOT NULL,
    DIRECCION VARCHAR2(200),
    COMUNA_ID NUMBER NOT NULL,
    CONSTRAINT FK_PLANTA_COMUNA FOREIGN KEY (COMUNA_ID) REFERENCES COMUNA(ID_COMUNA)
);

-- 5. Tabla EMPLEADO
CREATE TABLE EMPLEADO (
    ID_EMPLEADO NUMBER PRIMARY KEY,
    RUT VARCHAR2(12) NOT NULL UNIQUE,
    NOMBRES VARCHAR2(100) NOT NULL,
    APELLIDOS VARCHAR2(100) NOT NULL,
    FECHA_CONTRATACION DATE NOT NULL,
    SUELDO_BASE NUMBER NOT NULL,
    ESTADO_ACTIVO CHAR(1) DEFAULT 'S' CHECK (ESTADO_ACTIVO IN ('S', 'N')),
    PLANTA_ID NUMBER NOT NULL,
    AFP_ID NUMBER,
    SISTEMA_SALUD_ID NUMBER,
    JEFE_DIRECTO_ID NUMBER,
    CONSTRAINT FK_EMPLEADO_PLANTA FOREIGN KEY (PLANTA_ID) REFERENCES PLANTA(ID_PLANTA),
    CONSTRAINT FK_EMPLEADO_AFP FOREIGN KEY (AFP_ID) REFERENCES AFP(ID_AFP),
    CONSTRAINT FK_EMPLEADO_SALUD FOREIGN KEY (SISTEMA_SALUD_ID) REFERENCES SISTEMA_SALUD(ID_SISTEMA_SALUD),
    CONSTRAINT FK_EMPLEADO_JEFE FOREIGN KEY (JEFE_DIRECTO_ID) REFERENCES EMPLEADO(ID_EMPLEADO)
);

-- 6. Tablas de subtipos
CREATE TABLE JEFE_TURNO (
    EMPLEADO_ID NUMBER PRIMARY KEY,
    AREA_RESPONSABILIDAD VARCHAR2(100) NOT NULL,
    MAX_OPERARIOS NUMBER NOT NULL,
    CONSTRAINT FK_JEFE_EMPLEADO FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE OPERARIO (
    EMPLEADO_ID NUMBER PRIMARY KEY,
    CATEGORIA_PROCESO VARCHAR2(50) NOT NULL,
    CERTIFICACION VARCHAR2(100),
    HORAS_STANDARD_TURNO NUMBER DEFAULT 8,
    CONSTRAINT FK_OPERARIO_EMPLEADO FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE TECNICO_MANTENCION (
    EMPLEADO_ID NUMBER PRIMARY KEY,
    ESPECIALIDAD VARCHAR2(50) NOT NULL,
    NIVEL_CERTIFICACION VARCHAR2(50),
    TIEMPO_RESPUESTA_STANDARD NUMBER,
    CONSTRAINT FK_TECNICO_EMPLEADO FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADO(ID_EMPLEADO)
);

-- 7. MAQUINA
CREATE TABLE MAQUINA (
    NUMERO_MAQUINA NUMBER,
    PLANTA_ID NUMBER,
    NOMBRE VARCHAR2(100) NOT NULL,
    ESTADO_ACTIVO CHAR(1) DEFAULT 'S' CHECK (ESTADO_ACTIVO IN ('S', 'N')),
    TIPO_MAQUINA_ID NUMBER NOT NULL,
    CONSTRAINT PK_MAQUINA PRIMARY KEY (NUMERO_MAQUINA, PLANTA_ID),
    CONSTRAINT FK_MAQUINA_PLANTA FOREIGN KEY (PLANTA_ID) REFERENCES PLANTA(ID_PLANTA),
    CONSTRAINT FK_MAQUINA_TIPO FOREIGN KEY (TIPO_MAQUINA_ID) REFERENCES TIPO_MAQUINA(ID_TIPO_MAQUINA)
);

-- 8. Tablas de operaciones
CREATE TABLE ASIGNACION_TURNO (
    EMPLEADO_ID NUMBER,
    FECHA DATE,
    TURNO_ID NUMBER NOT NULL,
    MAQUINA_NUMERO NUMBER NOT NULL,
    MAQUINA_PLANTA_ID NUMBER NOT NULL,
    ROL VARCHAR2(50),
    CONSTRAINT PK_ASIGNACION_TURNO PRIMARY KEY (EMPLEADO_ID, FECHA),
    CONSTRAINT FK_ASIGNACION_EMPLEADO FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADO(ID_EMPLEADO),
    CONSTRAINT FK_ASIGNACION_TURNO FOREIGN KEY (TURNO_ID) REFERENCES TURNO(ID_TURNO),
    CONSTRAINT FK_ASIGNACION_MAQUINA FOREIGN KEY (MAQUINA_NUMERO, MAQUINA_PLANTA_ID) 
        REFERENCES MAQUINA(NUMERO_MAQUINA, PLANTA_ID)
);

CREATE TABLE ORDEN_MANTENCION (
    ID_ORDEN NUMBER PRIMARY KEY,
    MAQUINA_NUMERO NUMBER NOT NULL,
    MAQUINA_PLANTA_ID NUMBER NOT NULL,
    TECNICO_ID NUMBER NOT NULL,
    FECHA_PROGRAMADA DATE NOT NULL,
    FECHA_EJECUCION DATE,
    DESCRIPCION_TRABAJO VARCHAR2(500),
    CONSTRAINT FK_ORDEN_MAQUINA FOREIGN KEY (MAQUINA_NUMERO, MAQUINA_PLANTA_ID) 
        REFERENCES MAQUINA(NUMERO_MAQUINA, PLANTA_ID),
    CONSTRAINT FK_ORDEN_TECNICO FOREIGN KEY (TECNICO_ID) REFERENCES TECNICO_MANTENCION(EMPLEADO_ID),
    CONSTRAINT CK_FECHAS_ORDEN CHECK (FECHA_EJECUCION IS NULL OR FECHA_EJECUCION >= FECHA_PROGRAMADA)
);


-- POBLAR DATOS BÁSICOS
-- Poblar REGION
INSERT INTO REGION (ID_REGION, NOMBRE_REGION) VALUES (SEQ_REGION.NEXTVAL, '21 Región de Valparaíso');
INSERT INTO REGION (ID_REGION, NOMBRE_REGION) VALUES (SEQ_REGION.NEXTVAL, '22 Región Metropolitana');

-- Poblar COMUNA
INSERT INTO COMUNA (ID_COMUNA, NOMBRE_COMUNA, REGION_ID) VALUES (1050, 'Quilpué', 21);
INSERT INTO COMUNA (ID_COMUNA, NOMBRE_COMUNA, REGION_ID) VALUES (1055, 'Maipú', 22);

-- Poblar PLANTA
INSERT INTO PLANTA (ID_PLANTA, NOMBRE_PLANTA, DIRECCION, COMUNA_ID) 
VALUES (1, '45 Planta Oriente', 'Camino Industrial 1234', 1050);

INSERT INTO PLANTA (ID_PLANTA, NOMBRE_PLANTA, DIRECCION, COMUNA_ID) 
VALUES (2, '46 Planta Costa', 'Av. Vidrieras 890', 1055);

-- Poblar TURNO
INSERT INTO TURNO (ID_TURNO, NOMBRE_TURNO, HORA_INICIO, HORA_FIN) 
VALUES (1, 'Mañana', '07:00', '15:00');

INSERT INTO TURNO (ID_TURNO, NOMBRE_TURNO, HORA_INICIO, HORA_FIN) 
VALUES (2, 'Noche', '23:00', '07:00');

INSERT INTO TURNO (ID_TURNO, NOMBRE_TURNO, HORA_INICIO, HORA_FIN) 
VALUES (3, 'Tarde', '15:00', '23:00');

COMMIT;


-- FASE 4: CONSULTAS
-- INFORME 1: Turnos con inicio posterior a 20:00
SELECT 
    ID_TURNO || ' ' || NOMBRE_TURNO || ' ' || HORA_INICIO AS TURNO,
    HORA_INICIO AS ENTRADA,
    HORA_FIN AS SALIDA
FROM TURNO
WHERE HORA_INICIO > '20:00'
ORDER BY HORA_INICIO DESC;

-- INFORME 2: Turnos diurnos (06:00 - 14:59)
SELECT 
    NOMBRE_TURNO || ' (' || SUBSTR(NOMBRE_TURNO, 1, 1) || REPLACE(HORA_INICIO, ':', '') || ')' AS TURNO,
    HORA_INICIO AS ENTRADA,
    HORA_FIN AS SALIDA
FROM TURNO
WHERE HORA_INICIO BETWEEN '06:00' AND '14:59'
ORDER BY HORA_INICIO ASC;


-- Poblar tablas catálogo restantes
INSERT INTO AFP (ID_AFP, NOMBRE_AFP) VALUES (1, 'Habitat');
INSERT INTO AFP (ID_AFP, NOMBRE_AFP) VALUES (2, 'Capital');
INSERT INTO AFP (ID_AFP, NOMBRE_AFP) VALUES (3, 'Modelo');

INSERT INTO SISTEMA_SALUD (ID_SISTEMA_SALUD, NOMBRE_SISTEMA) VALUES (1, 'Fonasa');
INSERT INTO SISTEMA_SALUD (ID_SISTEMA_SALUD, NOMBRE_SISTEMA) VALUES (2, 'Isapre BUPA');
INSERT INTO SISTEMA_SALUD (ID_SISTEMA_SALUD, NOMBRE_SISTEMA) VALUES (3, 'Isapre Cruz Blanca');

INSERT INTO TIPO_MAQUINA (ID_TIPO_MAQUINA, NOMBRE_TIPO) VALUES (1, 'Horno');
INSERT INTO TIPO_MAQUINA (ID_TIPO_MAQUINA, NOMBRE_TIPO) VALUES (2, 'Línea IS');
INSERT INTO TIPO_MAQUINA (ID_TIPO_MAQUINA, NOMBRE_TIPO) VALUES (3, 'Equipo Temple');
INSERT INTO TIPO_MAQUINA (ID_TIPO_MAQUINA, NOMBRE_TIPO) VALUES (4, 'Máquina Inspección');
INSERT INTO TIPO_MAQUINA (ID_TIPO_MAQUINA, NOMBRE_TIPO) VALUES (5, 'Equipo Empaque');

COMMIT;


-- Insertar empleados de ejemplo
INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRES, APELLIDOS, FECHA_CONTRATACION, SUELDO_BASE, ESTADO_ACTIVO, PLANTA_ID, AFP_ID, SISTEMA_SALUD_ID) 
VALUES (1, '12.345.678-9', 'Carlos', 'Martínez González', DATE '2020-03-15', 1200000, 'S', 1, 1, 1);

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRES, APELLIDOS, FECHA_CONTRATACION, SUELDO_BASE, ESTADO_ACTIVO, PLANTA_ID, AFP_ID, SISTEMA_SALUD_ID, JEFE_DIRECTO_ID) 
VALUES (2, '23.456.789-0', 'Ana', 'Silva Pérez', DATE '2021-06-20', 850000, 'S', 1, 2, 2, 1);

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRES, APELLIDOS, FECHA_CONTRATACION, SUELDO_BASE, ESTADO_ACTIVO, PLANTA_ID, AFP_ID, SISTEMA_SALUD_ID, JEFE_DIRECTO_ID) 
VALUES (3, '34.567.890-1', 'Pedro', 'López Rojas', DATE '2019-11-10', 950000, 'S', 1, 1, 1, 1);

-- Especializar empleados
INSERT INTO JEFE_TURNO (EMPLEADO_ID, AREA_RESPONSABILIDAD, MAX_OPERARIOS) 
VALUES (1, 'Producción Vidrio', 15);

INSERT INTO OPERARIO (EMPLEADO_ID, CATEGORIA_PROCESO, CERTIFICACION, HORAS_STANDARD_TURNO) 
VALUES (2, 'Caliente', 'Certificación Moldeado', 8);

INSERT INTO TECNICO_MANTENCION (EMPLEADO_ID, ESPECIALIDAD, NIVEL_CERTIFICACION, TIEMPO_RESPUESTA_STANDARD) 
VALUES (3, 'Mecánica', 'Nivel Avanzado', 2);

COMMIT;


-- Insertar máquinas
INSERT INTO MAQUINA (NUMERO_MAQUINA, PLANTA_ID, NOMBRE, ESTADO_ACTIVO, TIPO_MAQUINA_ID) 
VALUES (101, 1, 'Horno Principal Línea A', 'S', 1);

INSERT INTO MAQUINA (NUMERO_MAQUINA, PLANTA_ID, NOMBRE, ESTADO_ACTIVO, TIPO_MAQUINA_ID) 
VALUES (102, 1, 'IS Machine Botellas', 'S', 2);

INSERT INTO MAQUINA (NUMERO_MAQUINA, PLANTA_ID, NOMBRE, ESTADO_ACTIVO, TIPO_MAQUINA_ID) 
VALUES (201, 2, 'Tunel Temple Vidrio', 'S', 3);

-- Crear asignaciones de turno
INSERT INTO ASIGNACION_TURNO (EMPLEADO_ID, FECHA, TURNO_ID, MAQUINA_NUMERO, MAQUINA_PLANTA_ID, ROL) 
VALUES (2, DATE '2024-01-15', 1, 101, 1, 'Moldeador');

INSERT INTO ASIGNACION_TURNO (EMPLEADO_ID, FECHA, TURNO_ID, MAQUINA_NUMERO, MAQUINA_PLANTA_ID, ROL) 
VALUES (1, DATE '2024-01-15', 1, 102, 1, 'Supervisor');

-- Crear órdenes de mantención
INSERT INTO ORDEN_MANTENCION (ID_ORDEN, MAQUINA_NUMERO, MAQUINA_PLANTA_ID, TECNICO_ID, FECHA_PROGRAMADA, FECHA_EJECUCION, DESCRIPCION_TRABAJO) 
VALUES (1, 101, 1, 3, DATE '2024-01-10', DATE '2024-01-10', 'Mantención preventiva mensual');

INSERT INTO ORDEN_MANTENCION (ID_ORDEN, MAQUINA_NUMERO, MAQUINA_PLANTA_ID, TECNICO_ID, FECHA_PROGRAMADA, DESCRIPCION_TRABAJO) 
VALUES (2, 102, 1, 3, DATE '2024-01-20', 'Revisión sistema de moldes');

COMMIT;


-- Consulta 1: Listar todos los empleados con sus detalles
SELECT 
    e.ID_EMPLEADO,
    e.RUT,
    e.NOMBRES || ' ' || e.APELLIDOS AS NOMBRE_COMPLETO,
    p.NOMBRE_PLANTA AS PLANTA,
    CASE 
        WHEN j.EMPLEADO_ID IS NOT NULL THEN 'Jefe de Turno'
        WHEN o.EMPLEADO_ID IS NOT NULL THEN 'Operario'
        WHEN t.EMPLEADO_ID IS NOT NULL THEN 'Técnico Mantención'
        ELSE 'Sin Especialización'
    END AS TIPO_EMPLEADO
FROM EMPLEADO e
LEFT JOIN PLANTA p ON e.PLANTA_ID = p.ID_PLANTA
LEFT JOIN JEFE_TURNO j ON e.ID_EMPLEADO = j.EMPLEADO_ID
LEFT JOIN OPERARIO o ON e.ID_EMPLEADO = o.EMPLEADO_ID
LEFT JOIN TECNICO_MANTENCION t ON e.ID_EMPLEADO = t.EMPLEADO_ID
ORDER BY e.ID_EMPLEADO;

-- Consulta 2: Asignaciones de turno para una fecha específica
SELECT 
    e.NOMBRES || ' ' || e.APELLIDOS AS EMPLEADO,
    t.NOMBRE_TURNO AS TURNO,
    m.NOMBRE AS MAQUINA,
    a.ROL,
    a.FECHA
FROM ASIGNACION_TURNO a
JOIN EMPLEADO e ON a.EMPLEADO_ID = e.ID_EMPLEADO
JOIN TURNO t ON a.TURNO_ID = t.ID_TURNO
JOIN MAQUINA m ON a.MAQUINA_NUMERO = m.NUMERO_MAQUINA AND a.MAQUINA_PLANTA_ID = m.PLANTA_ID
WHERE a.FECHA = DATE '2024-01-15';

-- Consulta 3: Órdenes de mantención pendientes
SELECT 
    om.ID_ORDEN,
    m.NOMBRE AS MAQUINA,
    e.NOMBRES || ' ' || e.APELLIDOS AS TECNICO,
    om.FECHA_PROGRAMADA,
    om.DESCRIPCION_TRABAJO
FROM ORDEN_MANTENCION om
JOIN MAQUINA m ON om.MAQUINA_NUMERO = m.NUMERO_MAQUINA AND om.MAQUINA_PLANTA_ID = m.PLANTA_ID
JOIN TECNICO_MANTENCION tm ON om.TECNICO_ID = tm.EMPLEADO_ID
JOIN EMPLEADO e ON tm.EMPLEADO_ID = e.ID_EMPLEADO
WHERE om.FECHA_EJECUCION IS NULL
ORDER BY om.FECHA_PROGRAMADA;

-- Validar que no hay empleados en múltiples turnos el mismo día
SELECT EMPLEADO_ID, FECHA, COUNT(*)
FROM ASIGNACION_TURNO
GROUP BY EMPLEADO_ID, FECHA
HAVING COUNT(*) > 1;

-- Validar integridad referencial
SELECT 'REGION' AS TABLA, COUNT(*) AS CANTIDAD FROM REGION
UNION ALL
SELECT 'COMUNA', COUNT(*) FROM COMUNA
UNION ALL
SELECT 'PLANTA', COUNT(*) FROM PLANTA
UNION ALL
SELECT 'EMPLEADO', COUNT(*) FROM EMPLEADO
UNION ALL
SELECT 'TURNO', COUNT(*) FROM TURNO
UNION ALL
SELECT 'MAQUINA', COUNT(*) FROM MAQUINA;z